kind: pipeline
type: docker
name: default
load: plugin.yaml

platform:
  os: linux
  arch: amd64

environment:
  GIT_TAG: ${DRONE_COMMIT_SHA:0:7}
  VERSION: latest
  PROJECT: live4-data-center-service-drone
  IMAGE_NAME: live4-data-center-drone
  DOCKER_HUB: docker-registry.fenz.online
  REPOSITORY: live4

trigger:
  branch:
    exclude:
      - main

networks:  # 定义一个网络
  - name: mynetwork  # 网络名称
    driver: bridge  # 使用bridge驱动，也可以根据需要选择其他驱动



steps:
  # - name: curl
  #   image: curlimages/curl
  #   commands:
  #     - curl --location 'https://api.telegram.org/bot5407870517:AAHqQpWE9RKpq8dNo7SBT8oBDiEcPkyH8cs/sendMessage' \
  #                         --header 'Content-Type: application/json' \
  #                         --data '{
  #                             "chat_id": "-1001686872849",
  #                             "text": ${message},
  #                             "disable_notification": true
  #                         }'

                    
  - name: Send Telegram Notification
    image: curlimages/curl
    environment:
      MESSAGE: {"project": "${PROJECT}", "branch": "${DRONE_BRANCH}", "image": "${DOCKER_HUB}/${REPOSITORY}/${IMAGE_NAME}:${VERSION}-${GIT_TAG}"}
    commands:
      - echo $MESSAGE $${MESSAGE} ${MESSAGE}
      - |
        curl --location 'https://api.telegram.org/bot5407870517:AAHqQpWE9RKpq8dNo7SBT8oBDiEcPkyH8cs/sendMessage' \
          --header 'Content-Type: application/json' \
          --data '{
            "chat_id": "-1001686872849",
            "text": '${MESSAGE}',
            "disable_notification": true
          }'

  # - name: send-notification
  #   image: curlimages/curl
  #   environment:
  #     BRANCH_NAME: ${DRONE_BRANCH}
  #     MESSAGE: {"project": "$PROJECT", "branch": "$DRONE_BRANCH", "image": "docker-registry.fenz.online/live4/live4-data-center-drone:$VERSION-$GIT_TAG"}
  #   commands:
  #     - >
  #       curl --location 'https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage' \
  #         --header 'Content-Type: application/json' \
  #         --data '{
  #             "chat_id": "${TELEGRAM_CHAT_ID}",
  #             "text": ${MESSAGE},
  #             "disable_notification": true
  #         }'
  #   when:
  #     status:
  #       - success

# environment:
#   GIT_TAG: ''
#   PROJECT: 'live4-data-center-service'
#   IMAGE_NAME: 'live4-data-center-drone'

# steps:

#   - name: checkout
#     image: alpine/git
#     commands:
#       - echo hello $GIT_TAG bye
#       - git clone --recursive https://github.com/bobiMedia/live4-data-center-service.git .
#       - export GIT_TAG=$(git rev-parse --short HEAD)  # 获取 Git 提交的前7个字符作为 TAG
#       - echo "GIT_TAG=${GIT_TAG}" >> $DRONE_ENV_FILE 
#       - echo "GIT_TAG=${GIT_TAG}" > git_tag.txt
#     when:
#       event:
#         exclude:
#           - push

#   - name: generate-random-tag
#     image: bash
#     commands:
#       - echo hello $DRONE_ENV_FILE bye
#       - source git_tag.txt
#       - echo Generated random tag $GIT_TAG