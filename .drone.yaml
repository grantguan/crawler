kind: pipeline
type: docker
name: docker-compose-example

environment:
  GIT_TAG: ${DRONE_COMMIT_SHA:0:7}
  VERSION: latest3
  PROJECT: 'live4-data-center-service'
  IMAGE_NAME: 'live4-data-center-drone'

volumes:
  - name: shared-data
    path: /shared-data

steps:
  - name: Set GIT_TAG
    image: plugins/git
    volumes:
    - name: shared-data
      path: /shared-data
    settings:
      credentials:
        from_secret: devops-ssh  # 替换为您保存 GitHub 凭据的 Drone CI Secret 的名称
    commands:
      - export GIT_TAG=$(git rev-parse --short HEAD)
      - echo $GIT_TAG

  - name: Print Environment Variables
    image: alpine
    volumes:
    - name: shared-data
      path: /shared-data
    commands:
      - echo $GIT_TAG
      - echo ${DRONE_COMMIT_SHA:0:7}

  - name: ansible deploy
    image: plugins/ansible:latest
    environment:
      credentialsId: 
        from_secret: devops-ssh
      GIT_TAG: $GIT_TAG
      VERSION: $VERSION
      IMAGE_NAME: $IMAGE_NAME
      DOCKER_HUB: $DOCKER_HUB
    settings:
      playbook: ansible/playbook.yml
      galaxy: ansible/requirements.yml
      inventory: ansible/inventory.yml
      # syntax_check: true
      credentialsId: $credentialsId
      private_key:
        from_secret: devops-ssh
      # disableHostKeyChecking: true  
      ssh_args:
        - export GIT_TAG=$(git rev-parse --short HEAD)
      installation: ansible
      extra_vars:
        - ENV=droneFile
        - IMAGE=docker-registry.fenz.online/live4/live4-data-center-drone:${VERSION}-${DRONE_COMMIT_SHA:0:7}
        - NOTIFY=true

# environment:
#   GIT_TAG: ''
#   PROJECT: 'live4-data-center-service'
#   IMAGE_NAME: 'live4-data-center-drone'

# steps:

#   - name: checkout
#     image: alpine/git
#     commands:
#       - echo hello $GIT_TAG bye
#       - git clone --recursive https://github.com/bobiMedia/live4-data-center-service.git .
#       - export GIT_TAG=$(git rev-parse --short HEAD)  # 获取 Git 提交的前7个字符作为 TAG
#       - echo "GIT_TAG=${GIT_TAG}" >> $DRONE_ENV_FILE 
#       - echo "GIT_TAG=${GIT_TAG}" > git_tag.txt
#     when:
#       event:
#         exclude:
#           - push

#   - name: generate-random-tag
#     image: bash
#     commands:
#       - echo hello $DRONE_ENV_FILE bye
#       - source git_tag.txt
#       - echo Generated random tag $GIT_TAG